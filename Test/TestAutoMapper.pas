unit TestAutoMapper;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework,
  Test.Models,
  AutoMapper.Mapper,
  AutoMapper.ConfigurationProvider,
  Spring,
  Spring.Collections,
  AutoMapper.ClassPair
  ;

type

  TestTMapper = class(TTestCase)
  strict private
    FMapper: TMapper;
    procedure _Configure;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestConfigure;
    procedure TestMap_params_2;
    procedure TestMap_params_1;
  end;

implementation


procedure TestTMapper.SetUp;
begin
  FMapper := Mapper;
end;

procedure TestTMapper.TearDown;
begin
//  FMapper.Free;
end;

procedure TestTMapper.TestConfigure;
begin
  _configure;
end;

procedure TestTMapper.TestMap_params_1;
var
  FPerson:    TPerson;
  FUserDTO:   TUserDTO;
  FPersonDTO: TPersonDTO;

  FFirstName, FLastName, FMiddleName, FFullName: string;
  FAge: integer;
begin
  _configure;
  FLastName   := 'Иванов';
  FFirstName  := 'Сергей';
  FMiddleName := 'Николаеивч';
  FAge        :=  26;
  FFullName := FLastName+' '+FFirstName+' '+FMiddleName;

  FPerson := TPerson.Create(FLastName, FFirstName, FMiddleName, FAge);

  FUserDTO    := Mapper.Map<TUserDTO>(FPerson);
  FPersonDTO  := Mapper.Map<TPersonDTO>(FPerson);

  CheckEquals(FFullName, FUserDTO.FullName);
  CheckEquals(FAge, FUserDTO.Age);
  CheckEquals(FLastName, FPersonDTO.LastName);
  CheckEquals(FFirstName, FPersonDTO.FirstName);
  CheckEquals(FMiddleName, FPerson.MiddleName);
  CheckEquals(FAge, FPerson.Age);
end;

procedure TestTMapper.TestMap_params_2;
var
  FPerson:    TPerson;
  FUserDTO:   TUserDTO;
  FPersonDTO: TPersonDTO;

  FFirstName, FLastName, FMiddleName, FFullName: string;
  FAge: integer;
begin
  _configure;
  FLastName   := 'Иванов';
  FFirstName  := 'Сергей';
  FMiddleName := 'Николаеивч';
  FAge        :=  26;
  FFullName := FLastName+' '+FFirstName+' '+FMiddleName;

  FPerson := TPerson.Create(FLastName, FFirstName, FMiddleName, FAge);

  FUserDTO    := Mapper.Map<TPerson, TUserDTO>(FPerson);
  FPersonDTO  := Mapper.Map<TPerson, TPersonDTO>(FPerson);

  CheckEquals(FFullName, FUserDTO.FullName);
  CheckEquals(FAge, FUserDTO.Age);
  CheckEquals(FLastName,   FPersonDTO.LastName);
  CheckEquals(FFirstName,  FPersonDTO.FirstName);
  CheckEquals(FMiddleName, FPersonDTO.MiddleName);
  CheckEquals(FAge, FPersonDTO.Age, 'В исходном объекте свойство Age: Nullabe<integer>, а в результатирующем Age: integer. Автоматический Cast стандартными средствами не возможен');
end;

procedure TestTMapper._Configure;
begin
  Mapper.Reset;
  Mapper.Configure(procedure (const cfg: TConfigurationProvider)
                  begin
                    cfg.CreateMap<TPerson, TUserDTO>(procedure (const FPerson: TPerson; const FUserDTO: TUserDTO)
                                                        begin
                                                          FUserDTO.FullName := FPerson.LastName    +' '+
                                                                               FPerson.FirstName   +' '+
                                                                               FPerson.MiddleName;

                                                          FUserDTO.Age      := FPerson.Age;
                                                        end
                                                      )
                       .CreateMap<TPerson, TPersonDTO>();
                  end);
end;

initialization
  // Register any test cases with the test runner
  RegisterTest(TestTMapper.Suite);
end.

